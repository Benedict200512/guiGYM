/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import config.Session;
import config.dbConnector;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import user.workoutTable;

/**
 *
 * @author Karystel
 */
public class createMembership extends javax.swing.JFrame {

    /**
     * Creates new form createMembership
     */
    public createMembership() {
        initComponents();
    }
    public void setSelectedUserId(String userId) {
    uid.setText(userId);  
}
    public void setSelectedWorkoutId(String workoutId) {
    wid.setText(workoutId);  
}
    public void setWorkoutDetails(String workoutId, String coachId) {
    wid.setText(workoutId);   
    coachid.setText(coachId);     
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        mc = new javax.swing.JTextField();
        sd = new javax.swing.JTextField();
        ed = new javax.swing.JTextField();
        wid = new javax.swing.JTextField();
        mid = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        cancel = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        cancel1 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        cancel4 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        update = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        clear = new javax.swing.JButton();
        ms = new javax.swing.JComboBox<>();
        user = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        coachid = new javax.swing.JTextField();
        uid = new javax.swing.JTextField();
        workout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Header.setBackground(new java.awt.Color(0, 153, 153));
        Header.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CREATE USER MEMBERSHIP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Header.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 860, 30));

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setLayout(null);

        jPanel8.setBackground(new java.awt.Color(0, 153, 153));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel8.setLayout(null);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add.setText("ADD");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel8.add(add);
        add.setBounds(10, 10, 100, 40);

        jPanel2.add(jPanel8);
        jPanel8.setBounds(90, 50, 120, 60);

        mc.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        mc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcActionPerformed(evt);
            }
        });
        jPanel2.add(mc);
        mc.setBounds(390, 420, 240, 30);

        sd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        sd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        sd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sdActionPerformed(evt);
            }
        });
        jPanel2.add(sd);
        sd.setBounds(390, 340, 240, 30);

        ed.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edActionPerformed(evt);
            }
        });
        jPanel2.add(ed);
        ed.setBounds(390, 380, 240, 30);

        wid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        wid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        wid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        wid.setEnabled(false);
        wid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                widActionPerformed(evt);
            }
        });
        jPanel2.add(wid);
        wid.setBounds(390, 220, 100, 30);

        mid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        mid.setEnabled(false);
        mid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midActionPerformed(evt);
            }
        });
        jPanel2.add(mid);
        mid.setBounds(390, 140, 100, 30);

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel10.setText("Membership Cost:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(220, 410, 160, 50);

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel9.setText("End Date:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(220, 370, 180, 50);

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel11.setText("Start Date:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(220, 330, 170, 50);

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel8.setText("Membership Status:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(220, 290, 170, 50);

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel13.setText("Workout ID:");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(220, 210, 170, 50);

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel6.setText("Membership ID:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(220, 130, 170, 50);

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel6.setLayout(null);

        cancel.setBackground(new java.awt.Color(255, 255, 255));
        cancel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel6.add(cancel);
        cancel.setBounds(10, 10, 100, 40);

        jPanel7.setBackground(new java.awt.Color(0, 153, 153));
        jPanel7.setLayout(null);

        cancel1.setBackground(new java.awt.Color(0, 102, 102));
        cancel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        cancel1.setText("CANCEL");
        cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel1ActionPerformed(evt);
            }
        });
        jPanel7.add(cancel1);
        cancel1.setBounds(10, 10, 110, 40);

        jPanel6.add(jPanel7);
        jPanel7.setBounds(510, 300, 130, 60);

        jPanel2.add(jPanel6);
        jPanel6.setBounds(500, 50, 120, 60);

        jPanel10.setBackground(new java.awt.Color(0, 153, 153));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel10.setLayout(null);

        jPanel11.setBackground(new java.awt.Color(0, 153, 153));
        jPanel11.setLayout(null);

        cancel4.setBackground(new java.awt.Color(0, 102, 102));
        cancel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        cancel4.setText("CANCEL");
        cancel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel4ActionPerformed(evt);
            }
        });
        jPanel11.add(cancel4);
        cancel4.setBounds(10, 10, 110, 40);

        jPanel10.add(jPanel11);
        jPanel11.setBounds(510, 300, 130, 60);

        refresh.setBackground(new java.awt.Color(255, 255, 255));
        refresh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel10.add(refresh);
        refresh.setBounds(10, 10, 100, 40);

        jPanel2.add(jPanel10);
        jPanel10.setBounds(630, 50, 120, 60);

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setLayout(null);

        update.setBackground(new java.awt.Color(255, 255, 255));
        update.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel3.add(update);
        update.setBounds(10, 10, 100, 40);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(220, 50, 120, 60);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel4.setLayout(null);

        clear.setBackground(new java.awt.Color(255, 255, 255));
        clear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel4.add(clear);
        clear.setBounds(10, 10, 100, 40);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(360, 50, 120, 60);

        ms.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Active", "Expired", "Cancelled" }));
        ms.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msActionPerformed(evt);
            }
        });
        jPanel2.add(ms);
        ms.setBounds(390, 300, 240, 30);

        user.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-add-30.png"))); // NOI18N
        user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMouseClicked(evt);
            }
        });
        jPanel2.add(user);
        user.setBounds(500, 180, 30, 30);

        jLabel14.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel14.setText("Coach ID:");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(220, 250, 170, 50);

        jLabel15.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 15)); // NOI18N
        jLabel15.setText("User ID:");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(220, 170, 170, 50);

        coachid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        coachid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coachid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        coachid.setEnabled(false);
        coachid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachidActionPerformed(evt);
            }
        });
        jPanel2.add(coachid);
        coachid.setBounds(390, 260, 100, 30);

        uid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        uid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        uid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        uid.setEnabled(false);
        uid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uidActionPerformed(evt);
            }
        });
        jPanel2.add(uid);
        uid.setBounds(390, 180, 100, 30);

        workout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-add-30.png"))); // NOI18N
        workout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workoutMouseClicked(evt);
            }
        });
        jPanel2.add(workout);
        workout.setBounds(500, 220, 30, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked

    }//GEN-LAST:event_addMouseClicked

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

    if (uid.getText().isEmpty() || wid.getText().isEmpty() ||
    ms.getSelectedItem() == null || sd.getText().isEmpty() ||
    ed.getText().isEmpty() || mc.getText().isEmpty()) {
    JOptionPane.showMessageDialog(null, "All fields are required!");
    return;
}

if (!mc.getText().matches("\\d+(\\.\\d{1,2})?")) {
    JOptionPane.showMessageDialog(null, "Cost must be a valid number (e.g. 100 or 99.99).");
    mc.setText("");
    return;
}

String datePattern = "\\d{4}-\\d{2}-\\d{2}";
String startText = sd.getText().trim();
String endText = ed.getText().trim();

if (!startText.matches(datePattern) || !endText.matches(datePattern)) {
    JOptionPane.showMessageDialog(null,
        "Dates must be in the format YYYY-MM-DD.\nExample: 2025-06-01");
    return;
}

java.sql.Date startDate;
java.sql.Date endDate;
try {
    startDate = java.sql.Date.valueOf(startText);
    endDate = java.sql.Date.valueOf(endText);
} catch (IllegalArgumentException ex) {
    JOptionPane.showMessageDialog(null,
        "Invalid date value. Please ensure the month is 01–12 and the day is valid for that month.");
    return;
}

int userId = Integer.parseInt(uid.getText().trim());
int workoutId = Integer.parseInt(wid.getText().trim());
String status = ms.getSelectedItem().toString();
double cost = Double.parseDouble(mc.getText().trim());

try {
    dbConnector dbc = new dbConnector();
    String sql = "INSERT INTO tbl_membership (user_id, workout_id, m_status, m_start_date, m_end_date, m_cost) " +
                 "VALUES (?, ?, ?, ?, ?, ?)";
    PreparedStatement pst = dbc.connect.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    pst.setInt(1, userId);
    pst.setInt(2, workoutId);
    pst.setString(3, status);
    pst.setDate(4, startDate);
    pst.setDate(5, endDate);
    pst.setDouble(6, cost);

    int rowsInserted = pst.executeUpdate();
    if (rowsInserted > 0) {
        ResultSet rs = pst.getGeneratedKeys();
        int newId = rs.next() ? rs.getInt(1) : -1;

        Session sess = Session.getInstance();
        int currentUser = sess.getUserId();
        if (currentUser > 0) {
            String logSql = "INSERT INTO logs (user_id, action, date) VALUES (?, ?, NOW())";
            PreparedStatement logPst = dbc.connect.prepareStatement(logSql);
            logPst.setInt(1, currentUser);
            logPst.setString(2, "Created Membership with ID No. " + newId);
            logPst.executeUpdate();
            logPst.close();
        }

        JOptionPane.showMessageDialog(null, "Membership created successfully!");
        membershipForm mf = new membershipForm();
        mf.setVisible(true);
        this.dispose();

        mid.setText("");
        uid.setText("");
        wid.setText("");
        ms.setSelectedIndex(0);
        sd.setText("");
        ed.setText("");
        mc.setText("");

    } else {
        JOptionPane.showMessageDialog(null, "Failed to add membership.");
    }

    pst.close();

} catch (SQLException ex) {
    JOptionPane.showMessageDialog(null, "Database Error: " + ex.getMessage());
    ex.printStackTrace();
}




    }//GEN-LAST:event_addActionPerformed

    private void mcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcActionPerformed

    }//GEN-LAST:event_mcActionPerformed

    private void sdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sdActionPerformed

    }//GEN-LAST:event_sdActionPerformed

    private void edActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edActionPerformed

    }//GEN-LAST:event_edActionPerformed

    private void widActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_widActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_widActionPerformed

    private void midActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midActionPerformed

    }//GEN-LAST:event_midActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        membershipForm mf = new membershipForm();
        mf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel1ActionPerformed

    private void cancel4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel4ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        
    if ( uid.getText().isEmpty() || wid.getText().isEmpty() ||
        ms.getSelectedItem() == null || sd.getText().isEmpty() ||
        ed.getText().isEmpty() || mc.getText().isEmpty()) {

        JOptionPane.showMessageDialog(null, "All fields are required!");
        return;

    } else if (!mc.getText().matches("\\d+(\\.\\d{1,2})?")) {
        JOptionPane.showMessageDialog(null, "Cost must be a valid number (e.g. 100 or 99.99).");
        mc.setText("");
        return;
    }

    
    int membershipId   = Integer.parseInt(mid.getText().trim());
    int userId         = Integer.parseInt(uid.getText().trim());
    int workoutId         = Integer.parseInt(wid.getText().trim());
    String status      = ms.getSelectedItem().toString();
    java.sql.Date startDate = java.sql.Date.valueOf(sd.getText().trim());
    java.sql.Date endDate   = java.sql.Date.valueOf(ed.getText().trim());
    double cost        = Double.parseDouble(mc.getText().trim());

    try {
        dbConnector dbc = new dbConnector();
        String updateSQL = 
            "UPDATE tbl_membership " +
            "SET user_id = ?, workout_id = ?, m_status = ?, m_start_date = ?, m_end_date = ?, m_cost = ? " +
            "WHERE membership_id = ?";

        PreparedStatement pst = dbc.connect.prepareStatement(updateSQL);
        pst.setInt(1, userId);
        pst.setInt(2, workoutId);
        pst.setString(3, status);
        pst.setDate(4, startDate);
        pst.setDate(5, endDate);
        pst.setDouble(6, cost);
        pst.setInt(7, membershipId);

        int rowsUpdated = pst.executeUpdate();
        pst.close();

        if (rowsUpdated > 0) {
          
            Session sess = Session.getInstance();
            int currentUser = sess.getUserId();
            if (currentUser > 0) {
                String logAction = "Updated Membership with ID No. " + membershipId;
                String logSql    = 
                    "INSERT INTO logs (user_id, action, date) VALUES (?, ?, NOW())";
                PreparedStatement logPst = dbc.connect.prepareStatement(logSql);
                logPst.setInt(1, currentUser);
                logPst.setString(2, logAction);
                logPst.executeUpdate();
                logPst.close();
            } else {
                JOptionPane.showMessageDialog(null, "Invalid session user ID. Logging skipped.");
            }

            
            JOptionPane.showMessageDialog(null, "Membership updated successfully!");
            membershipForm mf = new membershipForm();
            mf.setVisible(true);
            this.dispose();
            
            mid.setText("");
            uid.setText("");
            wid.setText("");
            ms.setSelectedIndex(0);
            sd.setText("");
            ed.setText("");
            mc.setText("");

        } else {
            JOptionPane.showMessageDialog(null, "Failed to update membership.");
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Database Error: " + ex.getMessage());
        ex.printStackTrace();
    }



    }//GEN-LAST:event_updateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
             mid.setText("");
            uid.setText("");
            wid.setText("");
            ms.setSelectedIndex(0);
            sd.setText("");
            ed.setText("");
            mc.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void msActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msActionPerformed

    private void userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMouseClicked
        userTable ut = new userTable(this); 
        ut.setVisible(true);
        this.setVisible(false); 

    }//GEN-LAST:event_userMouseClicked

    private void coachidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachidActionPerformed

    private void uidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uidActionPerformed

    private void workoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workoutMouseClicked
        workoutTablee wt = new workoutTablee(this);  
        wt.setVisible(true);
        this.setVisible(false); 
    }//GEN-LAST:event_workoutMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(createMembership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(createMembership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(createMembership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(createMembership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new createMembership().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Header;
    public javax.swing.JButton add;
    public javax.swing.JButton cancel;
    private javax.swing.JButton cancel1;
    private javax.swing.JButton cancel4;
    public javax.swing.JButton clear;
    public javax.swing.JTextField coachid;
    public javax.swing.JTextField ed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    public javax.swing.JPanel jPanel8;
    public javax.swing.JTextField mc;
    public javax.swing.JTextField mid;
    public javax.swing.JComboBox<String> ms;
    public javax.swing.JButton refresh;
    public javax.swing.JTextField sd;
    public javax.swing.JTextField uid;
    public javax.swing.JButton update;
    private javax.swing.JLabel user;
    public javax.swing.JTextField wid;
    private javax.swing.JLabel workout;
    // End of variables declaration//GEN-END:variables
}
